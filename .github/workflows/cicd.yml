name: CI/CD # Workflow 이름

# Workflow 시작 조건 지정
on: # Workflow 시작
  push: # 푸시를 할 때마다
    branches: [ master ] # 메인 브랜치에서

jobs:
  build:
    runs-on: ubuntu-latest # 실행 환경 설정

    # 실행 스탭을 그룹화
    steps:
      - uses: actions/checkout@v3 # uses: 지정한 리포지토리 확인 후 코드에 대한 작업 실행, action/checkout@v3 : checkout이라는 작업의 v3버전을 실행
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission for gradlew # 스탭의 이름 지정
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # 현재 시간 가져오기
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2 # josStorer/get-current-time플러그인을 이용해 현재 시간을 가져오기
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      # 배포용 패키지 경로 지정
      - name: Set artifact
        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV # 빌드 이후 생성된 jar 파일을 찾아 artifact 라는 환경 변수에 값을 넣어준다

      # 빈스토크 배포
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20 # einaregilsson/beanstalk-deploy 플러그인을 이용해 빈스토크 배포 진행
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS_ACCESS_KEY_ID는 깃허브에서 설정
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS_SECRET_ACCESS_KEY는 깃허브에서 설정
          application_name: springboot-developer # 빈스토크에서 확인 가능
          environment_name: Springboot-developer-env # 빈스토크에서 확인 가능
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: ./build/libs/${{env.artifact}}